<Activity mc:Ignorable="sap sap2010" x:Class="Amysis_MedicalReadjudication_ClaimSearch" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:aa="clr-namespace:ABCBS_Process_Activities.AmisysErrorHandling;assembly=ABCBS.Process.Activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Pass Orig Claim Number for processing the claim during Medical Adjustment" Name="in_OrigClaimNumber" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Config data table is needed for the timeout " Name="io_DictConfig" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="This is the path to ClaimsMessage amisys error list" Name="in_ClaimsMessageListName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Configuration folder path where we find the amisys error list and template" Name="in_ConfigFolder" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Pass corrected claim number for processing medical readjudication" Name="in_CorrClaimNumber" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Checking if Hospital Readjudication Window is open (True/False)" Name="out_BoolHospitalWidgetWin" Type="OutArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Checking if Medical Adjustment is open (True/ False)" Name="out_BoolMedicalWidgetWin" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_Browser" Type="OutArgument(ui:Browser)" />
  </x:Members>
  <this:Amysis_MedicalReadjudication_ClaimSearch.in_OrigClaimNumber>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Amysis_MedicalReadjudication_ClaimSearch.in_OrigClaimNumber>
  <this:Amysis_MedicalReadjudication_ClaimSearch.in_CorrClaimNumber>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Amysis_MedicalReadjudication_ClaimSearch.in_CorrClaimNumber>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1514,5372</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Amysis_MedicalReadjudication_ClaimSearch_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>ABCBS_Process_Activities.AmisysErrorHandling</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>ABCBS.Process.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Module handle claims search for Medical Adjustment (Original Claim) and Medical Readjudiction (Corrected Claim). In order to work properly, you either provide the original claim value OR the corrected claim value, NEVER both. Results will depend on which kind of claim you are making you search for. Amisys Error handling is also applied in here" DisplayName="AmysisClaimSearch" sap:VirtualizedContainerService.HintSize="1385,5307" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:Browser" Name="browser0bject" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1323,94" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Claim Search started&quot;]" />
    <Sequence DisplayName="Pre Condition - Sequence" sap:VirtualizedContainerService.HintSize="1323,515" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="boolPreCondition" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:UiElementExists sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutLong&quot;).ToString) " DisplayName="Element Exists 'Claim Search Text Box'" Exists="[boolPreCondition]" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="be1ae799-7ba9-4daf-a62a-8033145e22b4" Selector="&lt;html app='chrome.exe' title='*Medical*AMISYS*' /&gt;&lt;webctrl id='Main' tag='IFRAME' /&gt;&lt;webctrl id='Form' tag='IFRAME' /&gt;&lt;webctrl id='*CLAIM_NBR*' tag='INPUT' type='TEXT' /&gt;" WaitForReady="COMPLETE">
            <ui:Target.TimeoutMS>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:Target.TimeoutMS>
          </ui:Target>
        </ui:UiElementExists.Target>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:UiElementExists>
      <If Condition="[boolPreCondition = False]" DisplayName="Checking - 'Claim Search Text Box'" sap:VirtualizedContainerService.HintSize="484,251" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Throw DisplayName="Throw AE - Pre Condition" Exception="[new Exception(&quot;Pre Condition: Failed : Claim Search&quot;)]" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Action - Sequence" sap:VirtualizedContainerService.HintSize="1323,1687" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser  Medical Screen" sap:VirtualizedContainerService.HintSize="1041,1576" sap2010:WorkflowViewState.IdRef="BrowserScope_1" Selector="&lt;html app='chrome.exe' title='*Medical*AMISYS*' /&gt;" UiBrowser="[browser0bject]">
        <ui:BrowserScope.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1007,1467" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[Not(in_OrigClaimNumber = &quot;&quot;)]" sap:VirtualizedContainerService.HintSize="945,433" sap2010:WorkflowViewState.IdRef="If_8">
                <If.Then>
                  <Sequence DisplayName="Original Claim Search" sap:VirtualizedContainerService.HintSize="450,273" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutShort&quot;).ToString)" DisplayName="Set Text 'Claim Number'" sap:VirtualizedContainerService.HintSize="388,162" sap2010:WorkflowViewState.IdRef="SetValue_1" Text="[in_OrigClaimNumber]">
                      <ui:SetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b30f6324-6a97-43b2-95c8-7c755e398e18" Selector="&lt;webctrl id='Main' tag='IFRAME' /&gt;&lt;webctrl id='Form' tag='IFRAME' /&gt;&lt;webctrl id='*CLAIM_NBR*' tag='INPUT' type='TEXT' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:SetValue.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SetValue>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Corrected Claim Search" sap:VirtualizedContainerService.HintSize="450,273" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutShort&quot;).ToString)" DisplayName="Set Text 'Claim Number'" sap:VirtualizedContainerService.HintSize="388,162" sap2010:WorkflowViewState.IdRef="SetValue_2" Text="[in_CorrClaimNumber]">
                      <ui:SetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b30f6324-6a97-43b2-95c8-7c755e398e18" Selector="&lt;webctrl id='Main' tag='IFRAME' /&gt;&lt;webctrl id='Form' tag='IFRAME' /&gt;&lt;webctrl id='*CLAIM_NBR*' tag='INPUT' type='TEXT' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:SetValue.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SetValue>
                  </Sequence>
                </If.Else>
              </If>
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutShort&quot;).ToString)" DelayMS="5000" DisplayName="Send Hotkey - Enter" sap:VirtualizedContainerService.HintSize="945,161" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="enter" KeyModifiers="None" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="0cdf3a5a-1dad-4791-9ac3-870e7827a4b9" WaitForReady="COMPLETE">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                  </ui:Target>
                </ui:SendHotkey.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SendHotkey>
              <Sequence DisplayName="Check Screen" sap:VirtualizedContainerService.HintSize="945,682" sap2010:WorkflowViewState.IdRef="Sequence_28">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="notNull" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetValue ContinueOnError="True" DisplayName="Get Member String" sap:VirtualizedContainerService.HintSize="541,69" sap2010:WorkflowViewState.IdRef="GetValue_1">
                  <ui:GetValue.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b99388de-f37d-4940-9b64-db6479312f0a" Selector="&lt;webctrl id='Main' tag='IFRAME' /&gt;&lt;webctrl id='Form' tag='IFRAME' /&gt;&lt;webctrl id='txtCLAIM_MEMBER_NBR' tag='INPUT' type='TEXT' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
                  </ui:GetValue.Target>
                  <ui:GetValue.Value>
                    <OutArgument x:TypeArguments="x:String">[notNull]</OutArgument>
                  </ui:GetValue.Value>
                </ui:GetValue>
                <If Condition="[notNull = &quot;&quot; or String.IsNullOrEmpty(notNull)]" sap:VirtualizedContainerService.HintSize="541,462" sap2010:WorkflowViewState.IdRef="If_12">
                  <If.Then>
                    <Sequence DisplayName="Send another Enter" sap:VirtualizedContainerService.HintSize="396,272" sap2010:WorkflowViewState.IdRef="Sequence_29">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutShort&quot;).ToString)" DelayMS="5000" DisplayName="Send Hotkey - Enter" sap:VirtualizedContainerService.HintSize="334,161" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="enter" KeyModifiers="None" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0cdf3a5a-1dad-4791-9ac3-870e7827a4b9" Selector="&lt;webctrl id='Main' tag='IFRAME' /&gt;&lt;webctrl id='Form' tag='IFRAME' /&gt;&lt;webctrl id='txtCLAIM_CLAIM_NBR' tag='INPUT' type='TEXT' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:SendHotkey>
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:BrowserScope.Body>
      </ui:BrowserScope>
    </Sequence>
    <Sequence DisplayName="Post Condition - Sequence" sap:VirtualizedContainerService.HintSize="1323,2602" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strPostCondition" />
        <Variable x:TypeArguments="x:Boolean" Name="boolPostCondition" />
        <Variable x:TypeArguments="x:String" Name="errorMsg" />
        <Variable x:TypeArguments="x:Boolean" Name="amisysErrorFound" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Initializise : out_BoolMedicalAdjustmentWidgetWin= True" sap:VirtualizedContainerService.HintSize="1261,82" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[out_BoolMedicalWidgetWin]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="out_BoolHospitalReadjudicationWidgetWin = true" sap:VirtualizedContainerService.HintSize="1261,82" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[out_BoolHospitalWidgetWin]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Browser" sap:VirtualizedContainerService.HintSize="1261,82" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="ui:Browser">[out_Browser]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="ui:Browser">[browser0bject]</InArgument>
        </Assign.Value>
      </Assign>
      <If sap2010:Annotation.AnnotationText="First check for correct screens to be opened" Condition="[Not(in_OrigClaimNumber = &quot;&quot;)]" sap:VirtualizedContainerService.HintSize="1261,1211" sap2010:WorkflowViewState.IdRef="If_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Original Claim Search - Medical Adjustment " sap:VirtualizedContainerService.HintSize="608,854" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="medReajScreen_exists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="We don't want readjudication screen to be opened in here" DisplayName="CheckReadjudication Screen" sap:VirtualizedContainerService.HintSize="546,590" sap2010:WorkflowViewState.IdRef="Sequence_26">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:UiElementExists sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutMedium&quot;).ToString)" DisplayName="Element Exists Medical Readjudication" Exists="[medReajScreen_exists]" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="UiElementExists_6">
                <ui:UiElementExists.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9751758e-c61f-4047-b0db-aa30543d1f03" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin_1' title='*Medical Readjudication*AMISYS*' /&gt;&lt;ctrl name='*Medical Readjudication*AMISYS Advance*' role='pane' /&gt;&lt;ctrl name='Google Chrome' role='pane' /&gt;&lt;ctrl role='pane' /&gt;" TimeoutMS="2000" WaitForReady="COMPLETE" />
                </ui:UiElementExists.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:UiElementExists>
              <If sap2010:Annotation.AnnotationText="We are checking if the original claim searched will open med readjudication screen, if so we will throw a business exception to it" Condition="[medReajScreen_exists]" DisplayName="Check Readjudication Screen" sap:VirtualizedContainerService.HintSize="484,295" sap2010:WorkflowViewState.IdRef="If_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Throw DisplayName="Throw BE - Out-Argument" Exception="[New BusinessRuleException(&quot;Unexpected error claim found. Original claim opened Medical Readjudication screen, please check orginal claim value. This must be manually reviewed&quot; )]" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Throw_7" />
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <ui:UiElementExists sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutMedium&quot;).ToString)" DisplayName="Element Exists Medical Adjustment" Exists="[boolPostCondition]" sap:VirtualizedContainerService.HintSize="546,113" sap2010:WorkflowViewState.IdRef="UiElementExists_8">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9751758e-c61f-4047-b0db-aa30543d1f03" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin*' title='*Medical Adjustmen*AMISYS*' /&gt;&lt;ctrl name='*Medical Adjustment - AMISYS*' role='pane' /&gt;" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:UiElementExists.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:UiElementExists>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Corrected Claim Search - Medical Readjudication" sap:VirtualizedContainerService.HintSize="608,1019" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="medAdjusScreen_exists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="We don't want adjustment screen to be opened in here" DisplayName="CheckAdjustment Screen" sap:VirtualizedContainerService.HintSize="546,590" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:UiElementExists sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutMedium&quot;).ToString)" DisplayName="Element Exists Medical Adjustment" Exists="[medAdjusScreen_exists]" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="UiElementExists_7">
                <ui:UiElementExists.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9751758e-c61f-4047-b0db-aa30543d1f03" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin*' title='*Medical Adjustmen*AMISYS*' /&gt;&lt;ctrl name='*Medical Adjustment - AMISYS*' role='pane' /&gt;" TimeoutMS="2000" WaitForReady="COMPLETE" />
                </ui:UiElementExists.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:UiElementExists>
              <If sap2010:Annotation.AnnotationText="We are checking if the corrected claim searched will open med adjustment screen, if so we will throw a business exception to it" Condition="[medAdjusScreen_exists]" DisplayName="Check Adjustment Screen" sap:VirtualizedContainerService.HintSize="484,295" sap2010:WorkflowViewState.IdRef="If_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Throw DisplayName="Throw BE - Out-Argument" Exception="[New BusinessRuleException(&quot;Unexpected error claim found. Corrected claim opened Medical Adjustment screen, please check corrected claim value. This must be manually reviewed&quot; )]" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Throw_6" />
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <ui:UiElementExists sap2010:Annotation.AnnotationText="Convert.ToInt32(io_DictConfig(&quot;TimeoutMedium&quot;).ToString)" DisplayName="Element Exists Medical Readjudication" Exists="[boolPostCondition]" sap:VirtualizedContainerService.HintSize="546,113" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9751758e-c61f-4047-b0db-aa30543d1f03" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin_1' title='*Medical Readjudication*AMISYS*' /&gt;&lt;ctrl name='*Medical Readjudication*AMISYS Advance*' role='pane' /&gt;&lt;ctrl name='Google Chrome' role='pane' /&gt;&lt;ctrl role='pane' /&gt;" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:UiElementExists.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:UiElementExists>
            <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" BrowserType="Chrome" ContinueOnError="True" DisplayName="Attach Browser Medical Readjudication" sap:VirtualizedContainerService.HintSize="546,125" sap2010:WorkflowViewState.IdRef="BrowserScope_2" Selector="&lt;html app='chrome.exe' title='*Medical Readjudication*AMISYS*' /&gt;" UiBrowser="[browser0bject]">
              <ui:BrowserScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                </ActivityAction>
              </ui:BrowserScope.Body>
            </ui:BrowserScope>
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[boolPostCondition]" DisplayName="Checking - 'Medical Readjudication or Adjustment WidgetWin'" sap:VirtualizedContainerService.HintSize="1261,874" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <Sequence DisplayName="Medical" sap:VirtualizedContainerService.HintSize="546,713" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign : out_BoolMedicalWidgetWin= True" sap:VirtualizedContainerService.HintSize="484,82" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[out_BoolMedicalWidgetWin]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
            <aa:Amysis_Error_Handling OuterHTML="{x:Null}" AmysisErrorFound="[amisysErrorFound]" Browser_="[browser0bject]" ClaimMessageFileName="[in_ClaimsMessageListName]" ClaimMessagePath="[in_ConfigFolder]" DisplayName="Amysis Error Handling" ErrorMsg="[errorMsg]" sap:VirtualizedContainerService.HintSize="484,189" sap2010:WorkflowViewState.IdRef="Amysis_Error_Handling_1" />
            <If Condition="[amisysErrorFound]" DisplayName="Checking Claim Status Value" sap:VirtualizedContainerService.HintSize="484,251" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Throw DisplayName="Throw BE - Out-Argument" Exception="[New BusinessRuleException(&quot;Error claim found. Reason: &quot; + errorMsg)]" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Throw_2" />
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:Annotation.AnnotationText="This flow can be used for long term if any process requires claim search for Hospital" DisplayName="Hospital" sap:VirtualizedContainerService.HintSize="546,524" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:UiElementExists DisplayName="Element Exists 'Hospital Adjustment'" Exists="[out_BoolHospitalWidgetWin]" sap:VirtualizedContainerService.HintSize="484,69" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ee53dc66-56a2-463c-bf09-650551c2e932" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin_1' title='*Hospital Adjustment*AMISYS*' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[out_BoolHospitalWidgetWin]" DisplayName="Checking if Hospital Readjudication" sap:VirtualizedContainerService.HintSize="484,273" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Assign DisplayName="out_BoolHospitalWidgetWin = true" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_BoolHospitalWidgetWin]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1323,94" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Claim Search finished&quot;]" />
  </Sequence>
</Activity>